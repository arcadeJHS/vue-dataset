{"version":3,"file":"DatasetSearch.js","sources":["../../src/helpers/index.js","../../src/DatasetSearch.vue?vue&type=template&lang.js","../../src/DatasetSearch.vue"],"sourcesContent":["const MORE_PAGES = '...'\n\nfunction debounce(func, wait, immediate) {\n  let timeout\n\n  return function () {\n    const context = this\n    const args = arguments\n\n    clearTimeout(timeout)\n    if (immediate && !timeout) {\n      func.apply(context, args)\n    }\n    timeout = setTimeout(function () {\n      timeout = null\n      if (!immediate) {\n        func.apply(context, args)\n      }\n    }, wait)\n  }\n}\n\n// https://jsperf.com/object-empty-ch/1\nfunction isEmptyObject(obj) {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const key in obj) {\n    return false\n  }\n\n  return true\n}\n\nfunction createPagingRange(nrOfPages, currentPage) {\n  const delta = 2\n  const range = []\n  const rangeWithDots = []\n  let length\n\n  range.push(1)\n\n  if (nrOfPages <= 1) {\n    return range\n  }\n\n  for (let i = currentPage - delta; i <= currentPage + delta; i++) {\n    if (i < nrOfPages && i > 1) {\n      range.push(i)\n    }\n  }\n  range.push(nrOfPages)\n\n  for (let i = 0; i < range.length; i++) {\n    if (length) {\n      if (range[i] - length === 2) {\n        rangeWithDots.push(length + 1)\n      } else if (range[i] - length !== 1) {\n        rangeWithDots.push(MORE_PAGES)\n      }\n    }\n    rangeWithDots.push(range[i])\n    length = range[i]\n  }\n\n  return rangeWithDots\n}\n\nfunction fieldSorter(fields, dsSortAs = {}) {\n  const dir = []\n  let i\n  const length = fields.length\n\n  fields = fields.map(function (o, i) {\n    if (o[0] === '-') {\n      dir[i] = -1\n      o = o.substring(1)\n    } else {\n      dir[i] = 1\n    }\n\n    return o\n  })\n\n  return function (a, b) {\n    for (i = 0; i < length; i++) {\n      const o = fields[i]\n      const aVal = dsSortAs[o] ? dsSortAs[o](a.value[o]) : a.value[o]\n      const bVal = dsSortAs[o] ? dsSortAs[o](b.value[o]) : b.value[o]\n\n      if (aVal > bVal) {\n        return dir[i]\n      }\n      if (aVal < bVal) {\n        return -dir[i]\n      }\n    }\n\n    return 0\n  }\n}\n\nfunction fieldFilter(items, filterFields) {\n  // Filter it by field\n  for (const filterKey in filterFields) {\n    // console.log(filterKey + ' -> ' + filterFields[filterKey]);\n    items = items.filter(function (item) {\n      const itemValue = item.value\n\n      for (const itemKey in itemValue) {\n        if (itemKey === filterKey) {\n          if (typeof filterFields[filterKey] === 'function') {\n            return filterFields[filterKey](itemValue[itemKey])\n          }\n          if (filterFields[filterKey] === '') {\n            return true\n          }\n          if (itemValue[itemKey] === filterFields[filterKey]) {\n            return true\n          }\n        }\n      }\n\n      return false\n    })\n  }\n\n  return items\n}\n\n// Search method that also takes into account transformations needed\nfunction findAny(dsSearchIn, dsSearchAs, rowData, str) {\n  // Convert the search string to lower case\n  str = String(str).toLowerCase()\n  for (const key in rowData) {\n    if (dsSearchIn.length === 0 || dsSearchIn.indexOf(key) !== -1) {\n      const value = String(rowData[key]).toLowerCase()\n\n      for (const field in dsSearchAs) {\n        if (field === key) {\n          // Found key in dsSearchAs so we pass the value and the search string to a search function\n          // that returns true/false and we return that if true.\n          /* Check if dsSearchAs is a function (passed from the template) */\n          if (typeof dsSearchAs[field] === 'function') {\n            const res = dsSearchAs[field](value, str, rowData)\n\n            if (res === true) {\n              return res\n            }\n          }\n        }\n      }\n      // If it doesn't return from above we perform a simple search\n      if (value.indexOf(str) >= 0) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nexport { MORE_PAGES, debounce, isEmptyObject, createPagingRange, fieldSorter, fieldFilter, findAny }\n","\n<input\n  type=\"text\"\n  :placeholder=\"dsSearchPlaceholder\"\n  class=\"form-control\"\n  :value=\"dsSearch\"\n  @input=\"input($event.target.value)\"\n/>\n","<template>\n  <input\n    type=\"text\"\n    :placeholder=\"dsSearchPlaceholder\"\n    class=\"form-control\"\n    :value=\"dsSearch\"\n    @input=\"input($event.target.value)\"\n  />\n</template>\n\n<script>\nimport { debounce } from './helpers'\n\nexport default {\n  inject: ['search'],\n  props: {\n    dsSearchPlaceholder: {\n      type: String,\n      default: ''\n    },\n    wait: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function () {\n    return {\n      dsSearch: ''\n    }\n  },\n  mounted() {\n    this.input = debounce((value) => {\n      this.search(value)\n    }, this.wait)\n  }\n}\n</script>\n"],"names":["let","const","this"],"mappings":";;;;AAEA,oBAAkB,MAAM,MAAM,WAAW;AACvCA,QAAI;AAEJ,WAAO,WAAY;AACjBC,UAAM,UAAU;AAChBA,UAAM,OAAO;AAEb,mBAAa,OAAO;AACpB,UAAI,aAAa,CAAC,SAAS;AACzB,aAAK,MAAM,SAAS,IAAI;AAAA,MACzB;AACD,gBAAU,WAAW,WAAY;AAC/B,kBAAU;AACV,YAAI,CAAC,WAAW;AACd,eAAK,MAAM,SAAS,IAAI;AAAA,QACzB;AAAA,MACF,GAAE,IAAI;AAAA,IACR;AAAA,EACH;ACpBA,MAAI,SAAS,WAAY;AACvB,QAAI,MAAI;AACR,QAAI,KAAG,IAAI;AACX,QAAI,KAAG,IAAI,MAAM,MAAI;AAErB,WAAO,GAAG,SAAS;AAAA,MACjB,aAAa;AAAA,MACb,OAAO;AAAA,QACL,QAAQ;AAAA,QACR,eAAe,IAAI;AAAA,MACpB;AAAA,MACD,UAAU;AAAA,QACR,SAAS,IAAI;AAAA,MACd;AAAA,MACD,IAAI;AAAA,QACF,SAAS,SAAU,QAAQ;AACzB,iBAAO,IAAI,MAAM,OAAO,OAAO,KAAK;AAAA,QACrC;AAAA,MACF;AAAA,IACL,CAAG;AAAA,EACH;AAEA,MAAI,kBAAkB,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTxBA,MAAA,gBAAA;AAAA,IACA,QAAA,CAAA,QAAA;AAAA,IACA,OAAA;AAAA,MACA,qBAAA;AAAA,QACA,MAAA;AAAA,QACA,SAAA;AAAA,MACA;AAAA,MACA,MAAA;AAAA,QACA,MAAA;AAAA,QACA,SAAA;AAAA,MACA;AAAA,IACA;AAAA,IACA,MAAA,WAAA;AACA,aAAA;AAAA,QACA,UAAA;AAAA,MACA;AAAA,IACA;AAAA,IACA,4BAAA;;AACA,WAAA,QAAA,SAAA,SAAA,OAAA;AACAC,iBAAA,OAAA,KAAA;AAAA,MACA,GAAA,KAAA,IAAA;AAAA,IACA;AAAA,EACA;;;;;;;;;;;;;"}